//
//  ExpandedCardDetailInteractor.swift
//  Spaced Repetition
//
//  Created by Kevin Vu on 7/20/20.
//  Copyright (c) 2020 An Nguyen. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ExpandedCardDetailBusinessLogic {
    func configureCardText(request: ExpandedCardDetail.ConfigureCardTextOnLoad.Request)
    
}

protocol ExpandedCardDetailDataStore {
    var cardInfo: Card? { get set }
}

class ExpandedCardDetailInteractor: ExpandedCardDetailBusinessLogic, ExpandedCardDetailDataStore, ExpandedCardDetailViewDelegate {
    
    var presenter: ExpandedCardDetailPresentationLogic?
    var cardInfo: Card?

    // MARK: Business Logic
    
    func configureCardText(request: ExpandedCardDetail.ConfigureCardTextOnLoad.Request) {
        guard let cardInfo = cardInfo else { return }
        
        let frontSideText = cardInfo.frontSideText
        let backSideText = cardInfo.backSideText
        
        let response = ExpandedCardDetail.ConfigureCardTextOnLoad.Response(frontSideText: frontSideText, backSideText: backSideText)
        presenter?.presentConfiguredCardText(response: response)
    }
    
    
    // MARK: Delegate methods
    
    func didTapBackgroundToDismissVC() {
        let response = ExpandedCardDetail.DismissVC.Response()
        presenter?.dismissVC(response: response)
    }
    
    
}
