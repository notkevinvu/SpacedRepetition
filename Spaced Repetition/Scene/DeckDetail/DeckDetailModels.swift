//
//  DeckDetailModels.swift
//  Spaced Repetition
//
//  Created by Kevin Vu on 4/3/20.
//  Copyright (c) 2020 An Nguyen. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit


enum DeckDetail {
    
    // MARK: ShowDeck
    enum ShowDeck {
        struct Request {
            
        }
        struct Response {
            let deck: Deck
        }
        enum ViewModel {
            struct DeckInfoModel {
                let displayedDeckName: String
            }
            
            // might need card UUID for this?
            struct DeckCardModels {
                let displayedCards: [DeckDetailCollectionViewCell.CardCellModel]
            }
        }
    }
    
    
    // MARK: (Show) Create Card
    enum ShowCreateCard {
        struct Request {
        }
    }
    
    
    enum CreateCard {
        // prob don't need a deckID for the request since modifying a core data child entity
        // should automatically modify the correct deck's card (since every Card has its own deck parent)
        
        /*
         also might not need the request anyway?
         frontSideText and backSideText are both handled
         within the interactor via the alertdisplayable
         action handler
         */
//        struct Request {
//            let frontSideText: String
//            let backSideText: String
//        }
        struct Response {
            let cardModel: CardModel
        }
        struct ViewModel {
            let displayedCard: DeckDetailCollectionViewCell.CardCellModel
        }
    }
    
    
    // MARK: Card options
    enum ShowCardOptions {
        struct Request {
            let cardIndexToEditOrDelete: Int
        }
    }
    
    // MARK: Edit card
    enum ShowEditCardAC {
        struct Request {
            let cardIndex: Int
        }
        struct Response {
            let card: Card
            let cardIndex: Int
        }
        struct ViewModel {
            let displayedCard: DeckDetailCollectionViewCell.CardCellModel
            let cardIndex: Int
        }
    }
    
    
    // MARK: Delete card
    enum ShowDeleteCardAC {
        struct Request {
            let cardIndexToDelete: Int
        }
        struct Response {
            let cardIndexToDelete: Int
        }
        struct ViewModel {
            let cardIndexToDelete: Int
        }
    }
    
    
    // MARK: Review deck
    enum ShowReviewDeck {
        struct Request {
            
        }
        struct Response {
            let deckInfoToPass: Deck
        }
        struct DeckModel {
            let deckInfoToPass: Deck
        }
    }
    
    
}


