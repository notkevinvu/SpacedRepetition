//
//  DeckDetailRouter.swift
//  Spaced Repetition
//
//  Created by Kevin Vu on 4/3/20.
//  Copyright (c) 2020 An Nguyen. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol DeckDetailRoutingLogic
{
    func routeToReviewDeck()
    
    func routeToExpandedCardDetail()
}

protocol DeckDetailDataPassing
{
  var dataStore: DeckDetailDataStore? { get set }
}

class DeckDetailRouter: NSObject, DeckDetailRoutingLogic, DeckDetailDataPassing
{
    weak var viewController: DeckDetailViewController?
    var dataStore: DeckDetailDataStore?
  
    // MARK: Routing
    
    func routeToReviewDeck() {
        let destinationVC = ReviewDeckViewController()
        var destinationDS = destinationVC.router!.dataStore
        passDataToReviewDeck(fromDataStore: dataStore!, toDataStore: &destinationDS!)
        viewController?.navigationController?.pushViewController(destinationVC, animated: true)
    }
    
    
    func routeToExpandedCardDetail() {
        let destinationVC = ExpandedCardDetailViewController()
        destinationVC.modalPresentationStyle = .overCurrentContext
        destinationVC.modalTransitionStyle = .crossDissolve
        var destinationDS = destinationVC.router!.dataStore
        passDataToExpandedCardDetail(fromDataStore: dataStore!, toDataStore: &destinationDS!)
        viewController?.navigationController?.present(destinationVC, animated: true, completion: nil)
        
    }
    
    
    // MARK: Navigation
    
    
    // MARK: Passing data
    
    func passDataToReviewDeck(fromDataStore: DeckDetailDataStore, toDataStore: inout ReviewDeckDataStore) {
        toDataStore.deckInfo = fromDataStore.deckInfo
    }
    
    
    func passDataToExpandedCardDetail(fromDataStore: DeckDetailDataStore, toDataStore: inout ExpandedCardDetailDataStore) {
        // current card info is set when we select a collection view cell
        toDataStore.cardInfo = fromDataStore.currentCardInfo
    }
    
    
}
